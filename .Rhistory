head(activity)
activity <- read.csv("activity.csv")
head(activity)
summary(activity)
head(total_steps_taken_perday )
head(total.steps.perday )
total.steps.perday <- aggregate(steps~date, activity, sum, na.rm = TRUE)
head(total.steps.perday )
mean.total.steps.perday
head(mean.total.steps.perday)
head(total.steps.perday)
head(mean.total.steps.perday)
mean.total.steps.perday <- mean(total.steps.perday$steps)
head(mean.total.steps.perday)
median.total.steps.perday <- median(total.steps.perday$steps)
## What is the average daily activity pattern?
median.total.steps.perday <- median(total.steps.perday$steps)
head(median.total.steps.perday)
hist(date,right=FALSE, col=colors,xlab="Total Number of Steps Taken Per Day")
hist(steps,right=FALSE, col=colors,xlab="Total Number of Steps Taken Per Day")
hist(total.steps.perday$steps,right=FALSE, col=colors,xlab="Total Number of Steps Taken Per Day")
hist(total.steps.perday$steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
hist(total.steps.perday$steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
## What is the average daily activity pattern?
hist(steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
steps = total.steps.perday$steps
hist(steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
## What is the average daily activity pattern?
steps <- c(total.steps.perday$steps)
hist(steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
history(steps)
hist(steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
history(total.steps.perday)
history(total.steps.perday)
hist(steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
history(total.steps.perday)
history(total.steps.perday)
history(total.steps.perday)
head(total.steps.perday)
head(steps)
steps <- total.steps.perday$steps
head(steps)
hist(steps,right=FALSE,xlab="Total Number of Steps Taken Per Day")
hist(steps,man="Total Steps Taken Each Day", xlab="Total Number of Steps Taken Per Day")
hist(steps,main="Total Steps Taken Each Day", xlab="Total Number of Steps Taken Per Day")
## What is the average daily activity pattern?
hist(steps, main="Total Steps Taken Each Day", xlab="Total Number of Steps Taken Per Day")
ggplot(data=total.steps.perday, aes(x=steps)) + geom_histogram(binwidth=500) +
labs(x="Total Number of Steps per Day", y ="Frequency")
labs(x="Total Number of Steps per Day", y ="Frequency")
scale_y_continuous(breaks=seq(0,12,2))
ggplot(data=total.steps.perday, aes(x=steps)) + geom_histogram(binwidth=500)
gplot(data=total.steps.perday, aes(x=steps)) + geom_histogram(binwidth=500)
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day", breaks=seq(65, 90, 5))
## What is the average daily activity pattern?
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day", breaks=seq(65, 90, 5))
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day")
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day")
hist(steps, main="Total Stps Per Day", xlab="Total Steps taken Per Day")
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="#999999", lwd=0.4)
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
hist(steps, main="Daily Activity Pattern", xlab="Interval", ylab="Toal Steps", border="#ffffff", col="green")
##interval <- total.steps.perinterval$interval
labs(x="Interval", y ="Mean Number of Steps")
ggplot(total.steps.perinteval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Mean Number of Steps")
ggplot(total.steps.perinteval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Mean Number of Steps")
ggplot(total.steps.perinteval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Mean Number of Steps")
library(ggplot2)
ggplot(total.steps.perinteval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Mean Number of Steps")
ggplot(total.steps.perinterval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Mean Number of Steps")
head(total.steps.perinterval)
total.steps.perday <- aggregate(steps~date, activity, sum, na.rm = TRUE)
total.steps.perday <- aggregate(steps~date, activity, sum, na.rm = TRUE)
head(total.steps.perday)
head(total.steps.perinterval)
head(total.steps.perinterval)
head(total.steps.perday)
head(total.steps.perinterval)
head(steps.per.interval)
steps.per.interval <- aggregate(steps~interval, activity, mean, na.rm=TRUE)
head(steps.per.interval)
head(total.steps.perinterval)
head(total.steps.perinterval)
head(steps.per.interval)
ggplot(steps.per.interval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Mean Number of Steps")
ggplot(steps.per.interval, aes(interval, steps)) + geom_bar() + labs(x="Interval", y ="Number of Steps")
line
line
ggplot(steps.per.interval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Number of Steps")
ggplot(steps.per.interval, aes(interval, steps)) + geom_bar() + labs(x="Interval", y ="Number of Steps")
ggplot(steps.per.interval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Number of Steps")
ggplot(steps.per.interval, aes(interval, steps)) + geom_line(), colour="#000099"+ labs(x="Interval", y ="Number of Steps")
ggplot(steps.per.interval, aes(interval, steps)) + geom_line() + labs(x="Interval", y ="Number of Steps")
ggplot(steps.per.interval, aes(interval, steps)) + geom_line(colour="#000099") + labs(x="Interval", y ="Number of Steps")
head(interval.with.max.steps)
head(interval.with.max.steps)
## Imputing missing values
interval.with.max.steps<-steps.per.interval[which.max(steps.per.interval$steps),]
head(interval.with.max.steps)
head(interval.with.max.steps)
head(total.missing.values)
total.missing.values<-sum(is.na(activity$steps))
head(total.missing.values)
head(total.missing.values)
values <- c(is.na(activity$steps))
head(values)
total.missing.values.subset<-is.na(activity$steps)
total.missing.values.subset <- is.na(activity$steps)
activity$steps[total.missing.values.subset]<-steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
activity$steps[total.missing.values.subset]<-steps.per.interval[as.character(steps.per.interval$interval[total.missing.values.subset])]
head(total.missing.values.subset)
steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
head(steps.per.interval)
head(te)
head(te)
head(te)
te <- activity$interval
head(te)
te <- activity$interval[total.missing.values.subset]
head(te)
te <- as.character(activity$interval[total.missing.values.subset])
head(te)
te <- steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
te <- as.character(activity$interval[total.missing.values.subset])
te <- steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
te <- steps.per.interval(as.character(activity$interval[total.missing.values.subset]))
te <- steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
head(steps.per.interval)
head(steps.per.interval)
head(total.missing.values.subset)
head(total.missing.values.subset)
head(total.missing.values.sub)
head(total.missing.values.sub)
head(total.missing.values.sub)
head(sub)
head(sub)
sub<-activity$interval
head(sub)
head(total.missing.values.subset)
head(sub)
head(steps.per.interval)
sub<-steps.per.interval[activity$interval(total.missing.values.subset)]
sub<-as.character(activity$interval(total.missing.values.subset))
sub<-activity$interval(total.missing.values.subset)
sub<-activity$interval(total.missing.values.subset)
head(total.missing.values.subset)
sub<-activity$interval
sub<-activity$interval
sub<-activity$interval
head(sub)
head(sub)
head(steps.per.interval)
head(gr)
gr<-activity$steps
gr<-activity$steps
head(gr)
head(total.missing.values.subset)
gr<-activity$steps[total.missing.values.subset]
head(gr)
head(sub)
sub<-as.chracter(activity$interval(total.missing.values.subset))
sub<-as.character(activity$interval(total.missing.values.subset))
sub<-as.character(activity$interval[total.missing.values.subset])
head(sub)
head(gr)
head(steps.per.interval)
sub<-steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
sub<-as.character(activity$interval[total.missing.values.subset])
sub<-as.character(steps.per.interval(activity$interval[total.missing.values.subset]))
sub<-as.character(activity$interval[total.missing.values.subset])
head(steps.per.interval)
sb<-steps.per.interval(sub)
gr<-activity$steps[total.missing.values.subset]
head(gr)
head(sub)
head(sb)
sb <- steps.per.interval(sub)
head(sb)
head(sb)
head(steps.per.interval)
sub<-steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
head(sub)
head(total.missing.values.subset)
activity$date <- ymd(activity$date)
activity$date <- ymd(activity$date)
library(lubridate)
activity$date <- ymd(activity$date)
avg_interval <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE, simplify=TRUE)
head(avg_interval)
head(steps.per.interval)
activity$steps[total.missing.values.subset] <- steps.per.interval[as.character(activity$interval[total.missing.values.subset])]
gr<-activity$steps[total.missing.values.subset]
head(gr)
gre<-steps.per.interval$interval[total.missing.values.subset]
head(gre)
head(gre)
head(gre)
gre<-steps.per.interval(activity$interval[total.missing.values.subset])
gre<-steps.per.interval$interval[total.missing.values.subset]
gre<-activity$interval[total.missing.values.subset]
head(gre)
gre<-as.character(activity$interval[total.missing.values.subset])
head(gre)
grep<-steps.per.interval(gre)
grep <- steps.per.interval(gre)
grep <-steps.per.interval(gre)
head(steps.per.interval)
head(gr)
head(gre)
head(gre)
gre<-activity$interval[total.missing.values.subset]
head(gre)
steps.per.interval[0]
steps.per.interval[1]
steps.per.interval[0,1]
head(gr)
head(gre)
head(gre)
steps.per.interval[0,1]
gre<-as.character(activity$interval[total.missing.values.subset])
head(gre)
steps.per.interval["0"]
steps.per.interval("0")
steps.per.interval[0,1]
head(steps.per.interval)
steps.per.interval$steps[5]
steps.per.interval$interval[5]
head(gre)
steps.per.interval$interval["5"]
steps.per.interval$steps["5"]
gre<-steps.per.interval$steps[(activity$interval[total.missing.values.subset])]
head(gre)
activity$steps[total.missing.values.subset]<-steps.per.interval$steps[(activity$interval[total.missing.values.subset])]
sum(is.na(activity$steps))
head(activity$steps[total.missing.values.subset])
sum(activity$steps[total.missing.values.subset])
head(steps.per.interval)
head(activity)
head(total.missing.values.subset)
activity[!complete.cases(activity),]
head(rd)
rd <- activity[!complete.cases(activity),]
head(rd)
sum(rd)
rd <- activity[!complete.cases(activity),]
sum(rd)
total.missing.values <- sum(is.na(activity$steps))
sum(is.na(activity$steps))
sum[activity[!complete.cases(activity),]]
rd <- activity[!complete.cases(activity),]
sum(rd)
head(total.missing.values)
head(total.missing.values)
total.missing.values <- sum(is.na(activity2$steps))
}
head(total.missing.values)
new <- function(x, y){
new.steps <- x$steps
all.nas <- which(is.na(new.steps))
for (a in all.nas){
intrvl <- x[a,]$interval
avg.step <- y[y$interval==intrvl,]$steps
new.steps[a] <- avg.step
}
new.steps
}
new.steps <- new(activity, steps.per.interval)
activity2 <- data.frame(steps = new.steps, date=activity$date, interval=activity$interval)
total.missing.values <- sum(is.na(activity2$steps))
head(total.missing.values)
mean.total.steps.perday <- mean(total.steps.perday$steps)
new.total.steps.perday <- aggregate(steps~date, activity2, sum, na.rm = TRUE)
mean(new.total.steps.perday$steps)
mean(total.steps.perday$steps)
median(new.total.steps.perday$steps)
median(total.steps.perday$steps)
new.total.steps.perday <- aggregate(steps~date, activity2, sum, na.rm = TRUE)
new.mean.total.steps.perday <- mean(new.total.steps.perday$steps)
new.median.total.steps.perday <- median(new.total.steps.perday$steps)
hist(new.steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
hist(new.steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
legend("topright", c("Imputed Data", "Non-NA Data"), fill=c("black", "grey") )
hist(new.steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Black")
hist(new.steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Black")
hist(new.steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Black")
hist(steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Grey", add=T)
legend("topright", c("Imputed Data", "Non-NA Data"), fill=c("black", "grey") )
hist(new.steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Black")
hist(steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Black")
hist(steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Grey")
hist(new.steps, breaks=5, xlab="Steps", main = "Total Steps per Day with NAs Fixed", col="Black")
nofill <- hist(steps, breaks = seq(-250,21750,500), plot = FALSE)
withfill <- hist(new.steps, breaks = seq(-250,21750,500), plot = FALSE)
xlab="Average Total Number of Steps per Day")
xlab="Average Total Number of Steps per Day")
nofill <- hist(steps, breaks = seq(-250,21750,500), plot = FALSE)
nofill <- hist(steps, breaks = seq(-250,21750,500), plot = FALSE)
withfill <- hist(new.steps, breaks = seq(-250,21750,500), plot = FALSE)
xlab="Average Total Number of Steps per Day")
plot(nofill, col=rgb(.1,.1,.1,alpha=0.8), xlim=c(-250,25000), ylim = c(0,12), main = "",xlab="Average Total Number of Steps per Day")
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
plot(withfill, col=rgb(.2,.2,.2,alpha=0.5), xlim=c(-250,25000), ylim = c(0,12), add=T)
nofill <- hist(steps, breaks = seq(-250,21750,500), plot = FALSE)
withfill <- hist(new.steps, breaks = seq(-250,21750,500), plot = FALSE)
plot(nofill, col=rgb(.1,.1,.1,alpha=0.8), xlim=c(-250,25000), ylim = c(0,12), main = "",xlab="Average Total Number of Steps per Day")
plot(withfill, col=rgb(.2,.2,.2,alpha=0.5), xlim=c(-250,25000), ylim = c(0,12), add=T)
opts_chunk$set(echo = TRUE, results = 'hold', message = FALSE, warning = FALSE)
total.steps.perday <- aggregate(steps~date, activity, sum, na.rm = TRUE)
mean.total.steps.perday <- mean(total.steps.perday$steps)
median.total.steps.perday <- median(total.steps.perday$steps)
steps <- total.steps.perday$steps
hist(steps, main="Total Steps Per Day", xlab="Total Steps taken Per Day",border="#ffffff", col="blue", lwd=0.4)
steps.per.interval <- aggregate(steps~interval, activity, mean, na.rm=TRUE)
library(ggplot2)
ggplot(steps.per.interval, aes(interval, steps)) + geom_line(colour="#000099") + labs(x="Interval", y ="Number of Steps")
interval.with.max.steps <- steps.per.interval[which.max(steps.per.interval$steps),]
total.missing.values <- sum(is.na(activity$steps))
new <- function(x, y){
new.steps <- x$steps
all.nas <- which(is.na(new.steps))
for (a in all.nas){
intrvl <- x[a,]$interval
avg.step <- y[y$interval==intrvl,]$steps
new.steps[a] <- avg.step
}
new.steps
}
new.steps <- new(activity, steps.per.interval)
activity2 <- data.frame(steps = new.steps, date=activity$date, interval=activity$interval)
new.steps <- new.total.steps.perday$steps
nofill <- hist(steps, breaks = seq(-250,21750,500), plot = FALSE)
withfill <- hist(new.steps, breaks = seq(-250,21750,500), plot = FALSE)
plot(nofill, col=rgb(.1,.1,.1,alpha=0.8), xlim=c(-250,25000), ylim = c(0,12), main = "",xlab="Average Total Number of Steps per Day")
plot(withfill, col=rgb(.2,.2,.2,alpha=0.5), xlim=c(-250,25000), ylim = c(0,12), add=T)
plot(nofill, col=blue, xlim=c(-250,25000), ylim = c(0,12), main = "",xlab="Average Total Number of Steps per Day")
plot(withfill, col=red, xlim=c(-250,25000), ylim = c(0,12), add=T)
mean(total.steps.perday$steps)
mean(new.total.steps.perday$steps)
median(total.steps.perday$steps)
median(new.total.steps.perday$steps)
head(mean.total.steps.perday)
summary(activity)
## What is mean total number of steps taken per day?
summary(activity)
weekdata <- mutate(activity2, date = ymd(date), weekday = wday(date),
day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",
ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
weekdata <- mutate(activity2, day.type = as.factor(day.type))
library(lubridate)
library(dplyr)
weekdata <- mutate(activity2, date = ymd(date), weekday = wday(date),
day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",
ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
weekdata <- mutate(activity2, day.type = as.factor(day.type))
library(lubridate)
library(dplyr)
weekdata <- mutate(activity2, date = ymd(date), weekday = wday(date),day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
weekdata <- mutate(activity2, day.type = as.factor(day.type))
weekdata <- mutate(activity2, date = ymd(date), weekday = wday(date), day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
weekdata<-mutate(activity2, day.type = as.factor(day.type))
weekdata<-mutate(activity2,day.type=as.factor(day.type))
head(activity2[activity2$day.type=="Weekday",])
weekdata <- mutate(activity2, date = ymd(date), weekday = wday(date), day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
weekdata <- mutate(activity2, day.type = as.factor(day.type))
weekdata <- mutate(activity2, date = ymd(date), weektype = ifelse(weekdays(data_full$date) == "Saturday" | weekdays(data_full$date) == "Sunday", "weekend", "weekday"))
weekdata <- mutate(activity2, date = ymd(date), weektype = ifelse(weekdays(activity$date) == "Saturday" | weekdays(activity$date) == "Sunday", "weekend", "weekday"))
activity2 <- mutate(activity2, date = ymd(date), weekday = wday(date),day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
activity2 <- mutate(activity2, day.type = as.factor(day.type))
weekdata <- mutate(activity2, date = ymd(date), weekday = wday(date),day.type = ifelse(weekday != 1 & weekday != 7,"Weekday",ifelse(weekday == 1 | weekday == 7, "Weekend", NA)))
weekdata <- mutate(weekdata, day.type = as.factor(day.type))
head(weekdata[weekdata$day.type=="Weekday",])
tail(weekdata[weekdata$day.type=="Weekend",])
steps.per.interval.bydaytype <- aggregate(steps~day.type+interval, weekdata, mean, na.rm=TRUE)
ggplot(steps.per.interval.bydaytype, aes(x=interval, y=steps)) +
geom_line(color=rgb(.1,.1,.1)) +
facet_wrap(~ day.type, nrow=2, ncol=1) +
labs(x="nth Interval", y="Average Number of Total Steps") +
theme_bw()
steps.interval.bydaytype <- aggregate(steps~day.type+interval, weekdata, mean, na.rm=TRUE)
ggplot(steps.interval.bydaytype, aes(x=interval, y=steps)) +
geom_line(aes(group=1), colour="#000099") +
facet_wrap(~ day.type, nrow=2, ncol=1) +
labs(x="Interval", y="Number of Steps") +
theme_grey()
steps.interval.bydaytype <- aggregate(steps~day.type+interval, weekdata, mean, na.rm=TRUE)
ggplot(steps.interval.bydaytype, aes(x=interval, y=steps)) +
geom_line(aes(colour=cond2, group=cond2)) +
facet_wrap(~ day.type, nrow=2, ncol=1) +
labs(x="Interval", y="Number of Steps") +
theme_grey()
steps.interval.bydaytype <- aggregate(steps~day.type+interval, weekdata, mean, na.rm=TRUE)
ggplot(steps.interval.bydaytype, aes(x=interval, y=steps)) +
geom_line(aes(colour=variable)) +
facet_wrap(~ day.type, nrow=2, ncol=1) +
labs(x="Interval", y="Number of Steps") +
theme_grey()
steps.interval.bydaytype <- aggregate(steps~day.type+interval, weekdata, mean, na.rm=TRUE)
ggplot(steps.interval.bydaytype, aes(x=interval, y=steps)) +
geom_line(aes(group=1), colour="#000099") +
facet_wrap(~ day.type, nrow=2, ncol=1) +
labs(x="Interval", y="Number of Steps") +
theme_grey()
